include:
  - project: 'matonto/gitlab-ci'
    ref: master
    file: 'shared-template.yml'

stages:
  - test
  - set_version_root_pom
  - set_version_parent_pom
  - update_master_with_new_version
  - increment_snapshot_version_root_pom
  - increment_snapshot_version_parent_pom
  - update_master_with_new_snapshot
  - unit_integration_test
  - deploy_artifacts
  - deploy_rdf_orm
  - create_release_branch
  - update_minor_release_root_pom
  - update_minor_release_parent_pom
  - update_master_with_new_minor_snapshot
  - new_release_deploy

variables:
  CHROME_VERSION: 85.0.4183.121-1
  ARTIFACTORY_BASE_URL: "https://artifactory.inovexcorp.com/artifactory/"
  MAVEN_SETTINGS_DOCKER: <server>
      <id>docker-hub</id>
      <username>PLACEHOLDER_USERNAME</username>
      <password>PLACEHOLDER_PW</password>
      <configuration>
        <email>PLACEHOLDER_EMAIL</email>
      </configuration>
    </server>

before_script:
  - rm -r /root/.m2/repository && ln -s /opt/m2/repository /root/.m2/repository
  - POM_VERSION=$(mvn org.apache.maven.plugins:maven-help-plugin:evaluate -Dexpression=project.version -q -DforceStdout)
  - MAJOR=$(echo $POM_VERSION | cut -d- -f1 | cut -d. -f1)
  - MINOR=$(echo $POM_VERSION | cut -d- -f1 | cut -d. -f2)
  - MICRO=$(echo $POM_VERSION | cut -d- -f1 | cut -d. -f3)
  - if [[ "$NEEDS_GIT_SETTINGS" == "1" ]]; then
  -   PRIVATE_URL="$(echo $CI_PROJECT_URL | sed "s|https://|https://gitlab-ci-token:$ACCESS_TOKEN@|g").git"
  -   git remote set-url origin $PRIVATE_URL
  -   git config --global user.email 'gitlab.runner@inovexcorp.com'
  -   git config --global user.name 'Gitlab Runner'
  - fi

# For merge requests, just do an initial test
test:
  variables:
    NEEDS_GIT_SETTINGS: 0
  stage: test
  script:
    - mvn $MAVEN_CLI_OPTS -pl '!mobi-distribution,!mobi-itests,!:itests-support,!:itests-orm,!:itests-web,!:itests-platform,!:itests-etl,!:itests-rest,!:itests-vfs' test
  except:
    - master
  only:
    - merge_requests

set_version_parent_pom:
  extends: .apply_root_version_to_parent_pom
  only:
    variables:
      - $CI_COMMIT_TITLE =~ /Merge branch .* into 'master'/
    refs:
      - master
  stage: set_version_parent_pom
  dependencies:
    - set_version_root_pom

update_master_with_new_version:
  dependencies:
    - set_version_parent_pom

increment_snapshot_version_parent_pom:
  extends: .apply_root_version_to_parent_pom
  only:
    variables:
      - $CI_COMMIT_TITLE =~ /^AUTOMATED COMMIT - Updates version to \d+\.\d+\.\d+$/
    refs:
      - master
  stage: increment_snapshot_version_parent_pom
  dependencies:
    - increment_snapshot_version_root_pom

update_master_with_new_snapshot:
  dependencies:
    - increment_snapshot_version_parent_pom

unit_integration_test:
  stage: unit_integration_test
  ## Tags section should be removed/updated once all runners have been updated
  tags:
    - test
  dependencies: []
  only:
    variables:
      - $CI_COMMIT_TITLE =~ /^AUTOMATED COMMIT - Updates version to \d+\.\d+\.\d+$/
    refs:
      - master
  script:
    # Redirect calls to localhost:9080 to host machines (not this container)
    # A 2nd container running mobi is bound to the host at port 9080
    - HOST_IP=$(ip route show | awk '/default/ {print $3}')
    - apt-get update && apt-get install -y redir
    - redir :9080 $HOST_IP:9080
    # Run unit, integration, and functional tests
    - mvn $MAVEN_CLI_OPTS clean install -DskipFunctional=false -DskipITs=false
  artifacts:
    paths: ['rdf-orm']

# Happens after NON snapshot commit to master
deploy_rdf_orm:
  stage: deploy_rdf_orm
  dependencies: ['unit_integration_test']
  variables:
    NEEDS_GIT_SETTINGS: 0
  only:
    variables:
      - $CI_COMMIT_TITLE =~ /^AUTOMATED COMMIT - Updates version to \d+\.\d+\.\d+$/
    refs:
      - master
  script:
    - cd rdf-orm/rdf-orm-gradle-plugin
    - ./gradlew publish -Pversion=$MAJOR.$MINOR.$MICRO -PnexusUsername=$NEXUS_USERNAME -PnexusPassword=$NEXUS_PW

update_minor_release_parent_pom:
  extends: .apply_root_version_to_parent_pom
  stage: update_minor_release_parent_pom
  only:
    - /release\/\d+\.\d+/
  except:
    - branches
  artifacts:
    paths: ['pom.xml', '*/pom.xml', '*/*/pom.xml']
  dependencies:
    - update_minor_release_root_pom

artifactory_release:
  stage: new_release_deploy
  only:
    - /release\d*\.\d*/
  except:
    - branches
  script:
    - mvn $MAVEN_CLI_OPTS clean install -P release-build -DproductId=$GA_KEY
    - curl -u $ARTIFACTORY_USER:$ARTIFACTORY_PW -X PUT "$ARTIFACTORY_BASE_URL/mobi-binaries/win/mobi-distribution-$MAJOR.$MINOR.$MICRO.zip" -T mobi-distribution/target/mobi-distribution-$MAJOR.$MINOR.$MICRO.zip
    - curl -u $ARTIFACTORY_USER:$ARTIFACTORY_PW -X PUT "$ARTIFACTORY_BASE_URL/mobi-binaries/nix/mobi-distribution-$MAJOR.$MINOR.$MICRO.tar.gz" -T mobi-distribution/target/mobi-distribution-$MAJOR.$MINOR.$MICRO.tar.gz
  artifacts:
    paths: ['mobi-distribution']

# build and push the docker image, per instructions in mobi-distribution README
# tag used to specify we want this job to happen w/ the docker builder runner
docker_release:
  stage: new_release_deploy
  tags:
    - docker-image-builder
  only:
    - /release\d*\.\d*/
  except:
    - branches
  script:
    - echo $MAVEN_SETTINGS_DOCKER | sed -e "s/PLACEHOLDER_USERNAME/$DOCKER_USERNAME/" -e "s/PLACEHOLDER_PW/$DOCKER_PW/" -e "s/PLACEHOLDER_EMAIL/$DOCKER_EMAIL/" > /root/.m2/ci_settings.xml
    - cd mobi-distribution
    - mvn $MAVEN_CLI_OPTS docker:build -DpushImageTag -s /root/.m2/ci_settings.xml


update_master_with_new_minor_snapshot:
  dependencies:
    - update_minor_release_parent_pom
  stage: update_master_with_new_minor_snapshot
  only:
    - /release\/\d+\.\d+/
  except:
    - branches
  dependencies:
    - update_minor_release_root_pom
  script:
    - CURRENT_VERSION="$MAJOR.$MINOR.$MICRO"
    - git add ./\*pom.xml
    - git commit -m "AUTOMATED COMMIT - Updates version to $CURRENT_VERSION-SNAPSHOT"
    - git pull
    - git push origin HEAD:master
    - git remote add github https://$GITHUB_NAME:$GITHUB_TOKEN@github.com:inovexcorp/mobi.git
    - git push github HEAD:master
    - git checkout $CI_COMMIT_TAG
    - git push github HEAD:$CI_COMMIT_TAG
